{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\laravel-base\\\\src\\\\components\\\\PersonalizationGridCategory.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport '../css/personalizationgrid.css';\n\nclass PersonalizationGridCategory extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.categories);\n    this.state = {\n      selected: [],\n      clicked: [],\n      categories: props.categories\n    };\n    const categories = [{\n      img: \"\",\n      text: \"Sociedade\"\n    }, {\n      img: \"\",\n      text: \"Moda\"\n    }, {\n      img: \"\",\n      text: \"Casa\"\n    }, {\n      img: \"\",\n      text: \"Opinião\"\n    }, {\n      img: \"\",\n      text: \"Pessoas\"\n    }, {\n      img: \"\",\n      text: \"Economia\"\n    }, {\n      img: \"\",\n      text: \"Cultura\"\n    }, {\n      img: \"\",\n      text: \"Desporto\"\n    }, {\n      img: \"\",\n      text: \"Artes\"\n    }];\n  }\n\n  clickCategory(id) {\n    if (this.state.selected.filter(obj => obj == id).length == 0) {\n      this.setState((prevState, props) => ({\n        selected: prevState.selected.concat(id)\n      }));\n    } else {\n      this.setState((prevState, props) => {\n        return {\n          selected: prevState.selected.filter(obj => obj != id)\n        };\n      });\n    }\n  } // componentDidMount(){\n  //     console.log('BEGIN');\n  //     fetch('https://jsonplaceholder.typicode.com/users')\n  //     .then(\n  //         res => res.json()\n  //     )\n  //     .then(res =>{\n  //         this.setState({\n  //             categories : res\n  //         })\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row carrosselcategorias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.categories.map((category, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"a_personalizationgrid_category\",\n        onClick: () => this.clickCategory(category.id),\n        style: {\n          backgroundImage: this.state.selected.find(obj => obj == category.id) ? `url('https://images.unsplash.com/photo-1541233349642-6e425fe6190e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80')` : 'none',\n          backgroundSize: 'contain',\n          color: this.state.selected.find(obj => obj == category.id) ? 'white' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, category.text);\n    }));\n  }\n\n}\n\nexport default PersonalizationGridCategory;","map":{"version":3,"sources":["C:/xampp/htdocs/laravel-base/src/components/PersonalizationGridCategory.js"],"names":["React","Component","useState","useEffect","PersonalizationGridCategory","constructor","props","console","log","categories","state","selected","clicked","img","text","clickCategory","id","filter","obj","length","setState","prevState","concat","render","map","category","index","backgroundImage","find","backgroundSize","color"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport '../css/personalizationgrid.css';\r\n\r\nclass PersonalizationGridCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props.categories);\r\n        this.state = {\r\n            selected: [],\r\n            clicked: [],\r\n            categories: props.categories\r\n\r\n        }\r\n        const categories = [\r\n            {\r\n                img: \"\",\r\n                text: \"Sociedade\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Moda\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Casa\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Opinião\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Pessoas\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Economia\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Cultura\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Desporto\"\r\n            },\r\n            {\r\n                img: \"\",\r\n                text: \"Artes\"\r\n            }];\r\n    }\r\n\r\n\r\n\r\n    clickCategory(id) {\r\n        if (this.state.selected.filter(obj => obj == id).length == 0) {\r\n            this.setState((prevState, props) => ({\r\n                selected: prevState.selected.concat(id)\r\n            }))\r\n        } else {\r\n            this.setState((prevState, props) => {\r\n                return { selected: prevState.selected.filter(obj => obj != id) };\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     console.log('BEGIN');\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //     .then(\r\n    //         res => res.json()\r\n    //     )\r\n    //     .then(res =>{\r\n    //         this.setState({\r\n    //             categories : res\r\n    //         })\r\n    //     })\r\n        \r\n    // }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"row carrosselcategorias\">\r\n\r\n                {\r\n                    this.state.categories.map((category, index) => {\r\n                        return <div key={index} className=\"a_personalizationgrid_category\" onClick={() => this.clickCategory(category.id)}\r\n                            style={{\r\n                                backgroundImage: this.state.selected.find(obj => obj == category.id) ? `url('https://images.unsplash.com/photo-1541233349642-6e425fe6190e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80')` : 'none',\r\n                                backgroundSize: 'contain',\r\n                                color: this.state.selected.find(obj => obj == category.id) ? 'white' : 'black'\r\n                            }}>{category.text}</div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PersonalizationGridCategory;\r\n"]},"metadata":{},"sourceType":"module"}