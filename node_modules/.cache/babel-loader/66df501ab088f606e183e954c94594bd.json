{"ast":null,"code":"/*\n This file is auto-generated, do not edit\n*/\n'use strict';\n\nconst rqs = require(\"./request\");\n/**\n * Adds a cart addition of a given item made by a given user.\n */\n\n\nclass AddCartAddition extends rqs.Request {\n  /**\n   * Construct the request\n   * @param {string} userId - User who added the item to the cart\n   * @param {string} itemId - Item added to the cart\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the cart addition as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) added to cart. The default is 1. For example if `user-x` adds two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price of the added item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this cart addition is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  constructor(userId, itemId, optional) {\n    super('POST', '/cartadditions/', 3000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.timestamp = optional.timestamp;\n    this.cascadeCreate = optional.cascadeCreate;\n    this.amount = optional.amount;\n    this.price = optional.price;\n    this.recommId = optional.recommId;\n    this.additionalData = optional.additionalData;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  bodyParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n    if (this.timestamp !== undefined) params.timestamp = this.timestamp;\n    if (this.cascadeCreate !== undefined) params.cascadeCreate = this.cascadeCreate;\n    if (this.amount !== undefined) params.amount = this.amount;\n    if (this.price !== undefined) params.price = this.price;\n    if (this.recommId !== undefined) params.recommId = this.recommId;\n    if (this.additionalData !== undefined) params.additionalData = this.additionalData;\n    params.cascadeCreate = this.cascadeCreate !== undefined ? this.cascadeCreate : true;\n    return params;\n  }\n\n}\n\nexports.AddCartAddition = AddCartAddition;","map":{"version":3,"sources":["C:/xampp/htdocs/laravel-base/node_modules/recombee-js-api-client/src/requests/add-cart-addition.js"],"names":["rqs","require","AddCartAddition","Request","constructor","userId","itemId","optional","timestamp","cascadeCreate","amount","price","recommId","additionalData","bodyParameters","params","undefined","exports"],"mappings":"AAAA;;;AAIA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;AAGA,MAAMC,eAAN,SAA8BF,GAAG,CAACG,OAAlC,CAA0C;AAExC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2B;AACpC,UAAM,MAAN,EAAc,iBAAd,EAAiC,IAAjC,EAAuC,KAAvC;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,SAAKC,SAAL,GAAiBD,QAAQ,CAACC,SAA1B;AACA,SAAKC,aAAL,GAAqBF,QAAQ,CAACE,aAA9B;AACA,SAAKC,MAAL,GAAcH,QAAQ,CAACG,MAAvB;AACA,SAAKC,KAAL,GAAaJ,QAAQ,CAACI,KAAtB;AACA,SAAKC,QAAL,GAAgBL,QAAQ,CAACK,QAAzB;AACA,SAAKC,cAAL,GAAsBN,QAAQ,CAACM,cAA/B;AACD;AAED;;;;;;AAIAC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACV,MAAP,GAAgB,KAAKA,MAArB;AACAU,IAAAA,MAAM,CAACT,MAAP,GAAgB,KAAKA,MAArB;AAEA,QAAG,KAAKE,SAAL,KAAmBQ,SAAtB,EACED,MAAM,CAACP,SAAP,GAAmB,KAAKA,SAAxB;AAEF,QAAG,KAAKC,aAAL,KAAuBO,SAA1B,EACED,MAAM,CAACN,aAAP,GAAuB,KAAKA,aAA5B;AAEF,QAAG,KAAKC,MAAL,KAAgBM,SAAnB,EACED,MAAM,CAACL,MAAP,GAAgB,KAAKA,MAArB;AAEF,QAAG,KAAKC,KAAL,KAAeK,SAAlB,EACED,MAAM,CAACJ,KAAP,GAAe,KAAKA,KAApB;AAEF,QAAG,KAAKC,QAAL,KAAkBI,SAArB,EACED,MAAM,CAACH,QAAP,GAAkB,KAAKA,QAAvB;AAEF,QAAG,KAAKC,cAAL,KAAwBG,SAA3B,EACED,MAAM,CAACF,cAAP,GAAwB,KAAKA,cAA7B;AAEFE,IAAAA,MAAM,CAACN,aAAP,GAAwB,KAAKA,aAAL,KAAuBO,SAAxB,GAAqC,KAAKP,aAA1C,GAA0D,IAAjF;AACA,WAAOM,MAAP;AACD;;AArEuC;;AAyE1CE,OAAO,CAACf,eAAR,GAA0BA,eAA1B","sourcesContent":["/*\n This file is auto-generated, do not edit\n*/\n\n'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Adds a cart addition of a given item made by a given user.\n */\nclass AddCartAddition extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {string} userId - User who added the item to the cart\n   * @param {string} itemId - Item added to the cart\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the cart addition as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) added to cart. The default is 1. For example if `user-x` adds two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price of the added item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this cart addition is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  constructor(userId, itemId, optional) {\n    super('POST', '/cartadditions/', 3000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.timestamp = optional.timestamp;\n    this.cascadeCreate = optional.cascadeCreate;\n    this.amount = optional.amount;\n    this.price = optional.price;\n    this.recommId = optional.recommId;\n    this.additionalData = optional.additionalData;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n\n    if(this.timestamp !== undefined)\n      params.timestamp = this.timestamp;\n\n    if(this.cascadeCreate !== undefined)\n      params.cascadeCreate = this.cascadeCreate;\n\n    if(this.amount !== undefined)\n      params.amount = this.amount;\n\n    if(this.price !== undefined)\n      params.price = this.price;\n\n    if(this.recommId !== undefined)\n      params.recommId = this.recommId;\n\n    if(this.additionalData !== undefined)\n      params.additionalData = this.additionalData;\n\n    params.cascadeCreate = (this.cascadeCreate !== undefined) ? this.cascadeCreate : true;\n    return params;\n  }\n\n}\n\nexports.AddCartAddition = AddCartAddition\n"]},"metadata":{},"sourceType":"script"}