{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\laravel-base\\\\src\\\\components\\\\PersonalizationGridAuthor.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport '../css/personalizationgrid.css';\n\nclass PersonalizationGridAuthor extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {\n      selected: [],\n      clicked: [],\n      authors: props.author\n    };\n  }\n\n  clickAuthor(id) {\n    if (this.state.selected.filter(obj => obj == id).length == 0) {\n      this.setState((prevState, props) => ({\n        selected: prevState.selected.concat(id)\n      }));\n    } else {\n      this.setState((prevState, props) => {\n        return {\n          selected: prevState.selected.filter(obj => obj != id)\n        };\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row carrosselautores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.author.map((author, index) => {\n      let image = \"url('http://atenas.hopto.org/uploads/\" + author.image + \"')\";\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"a_personalizationgrid_category\",\n        onClick: () => this.clickAuthor(author.id),\n        style: {\n          backgroundImage: this.state.selected.find(obj => obj == author.id) ? image : 'none',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          color: this.state.selected.find(obj => obj == author.id) ? 'white' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, authors.name);\n    }));\n  }\n\n}\n\nexport default PersonalizationGridAuthor;","map":{"version":3,"sources":["C:/xampp/htdocs/laravel-base/src/components/PersonalizationGridAuthor.js"],"names":["React","Component","useState","useEffect","PersonalizationGridAuthor","constructor","props","console","log","state","selected","clicked","authors","author","clickAuthor","id","filter","obj","length","setState","prevState","concat","render","map","index","image","backgroundImage","find","backgroundSize","backgroundRepeat","backgroundPosition","color","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,gCAAP;;AAEA,MAAMC,yBAAN,SAAwCH,SAAxC,CAAkD;AAC9CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAKG,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,OAAO,EAAEN,KAAK,CAACO;AAHN,KAAb;AAMH;;AAEDC,EAAAA,WAAW,CAACC,EAAD,EAAK;AACZ,QAAI,KAAKN,KAAL,CAAWC,QAAX,CAAoBM,MAApB,CAA2BC,GAAG,IAAIA,GAAG,IAAIF,EAAzC,EAA6CG,MAA7C,IAAuD,CAA3D,EAA8D;AAC1D,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYd,KAAZ,MAAuB;AACjCI,QAAAA,QAAQ,EAAEU,SAAS,CAACV,QAAV,CAAmBW,MAAnB,CAA0BN,EAA1B;AADuB,OAAvB,CAAd;AAGH,KAJD,MAIO;AACH,WAAKI,QAAL,CAAc,CAACC,SAAD,EAAYd,KAAZ,KAAsB;AAChC,eAAO;AAAEI,UAAAA,QAAQ,EAAEU,SAAS,CAACV,QAAV,CAAmBM,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,IAAIF,EAAxC;AAAZ,SAAP;AACH,OAFD;AAGH;AAEJ;;AAGDO,EAAAA,MAAM,GAAG;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ,KAAKb,KAAL,CAAWI,MAAX,CAAkBU,GAAlB,CAAsB,CAACV,MAAD,EAASW,KAAT,KAAmB;AACrC,UAAIC,KAAK,GAAG,0CAA0CZ,MAAM,CAACY,KAAjD,GAAuD,IAAnE;AACA,aAAO;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAC,gCAA3B;AAA4D,QAAA,OAAO,EAAE,MAAM,KAAKV,WAAL,CAAiBD,MAAM,CAACE,EAAxB,CAA3E;AACH,QAAA,KAAK,EAAE;AACHW,UAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBV,GAAG,IAAIA,GAAG,IAAIJ,MAAM,CAACE,EAA9C,IAAoDU,KAApD,GAA4D,MAD1E;AAEHG,UAAAA,cAAc,EAAE,OAFb;AAGHC,UAAAA,gBAAgB,EAAE,WAHf;AAIHC,UAAAA,kBAAkB,EAAE,QAJjB;AAKHC,UAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBV,GAAG,IAAIA,GAAG,IAAIJ,MAAM,CAACE,EAA9C,IAAoD,OAApD,GAA8D;AALlE,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOCH,OAAO,CAACoB,IAPT,CAAP;AAQH,KAVD,CAHR,CADJ;AAkBH;;AA/C6C;;AAmDlD,eAAe5B,yBAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport '../css/personalizationgrid.css';\r\n\r\nclass PersonalizationGridAuthor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            selected: [],\r\n            clicked: [],\r\n            authors: props.author\r\n            \r\n        }\r\n    }\r\n\r\n    clickAuthor(id) {\r\n        if (this.state.selected.filter(obj => obj == id).length == 0) {\r\n            this.setState((prevState, props) => ({\r\n                selected: prevState.selected.concat(id)\r\n            }))\r\n        } else {\r\n            this.setState((prevState, props) => {\r\n                return { selected: prevState.selected.filter(obj => obj != id) };\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n                                                                                                            \r\n    render() {\r\n      \r\n\r\n        return (\r\n            <div className=\"row carrosselautores\">\r\n\r\n                {\r\n                    this.state.author.map((author, index) => {\r\n                        let image = \"url('http://atenas.hopto.org/uploads/\" + author.image+\"')\";\r\n                        return <div key={index} className=\"a_personalizationgrid_category\" onClick={() => this.clickAuthor(author.id)}\r\n                            style={{\r\n                                backgroundImage: this.state.selected.find(obj => obj == author.id) ? image : 'none',\r\n                                backgroundSize: 'cover',\r\n                                backgroundRepeat: 'no-repeat',\r\n                                backgroundPosition: 'center',\r\n                                color: this.state.selected.find(obj => obj == author.id) ? 'white' : 'black'\r\n                            }}>{authors.name}</div>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PersonalizationGridAuthor;\r\n"]},"metadata":{},"sourceType":"module"}