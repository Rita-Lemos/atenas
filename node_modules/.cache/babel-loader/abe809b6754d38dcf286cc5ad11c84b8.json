{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\laravel-base\\\\src\\\\components\\\\PersonalizationGridAuthor.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport '../css/personalizationgrid.css';\n\nclass PersonalizationGridAuthor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: [],\n      clicked: [],\n      categories: props.categories\n    };\n  }\n\n  clickCategory(id) {\n    if (this.state.selected.filter(obj => obj == id).length == 0) {\n      this.setState((prevState, props) => ({\n        selected: prevState.selected.concat(id)\n      }));\n    } else {\n      this.setState((prevState, props) => {\n        return {\n          selected: prevState.selected.filter(obj => obj != id)\n        };\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row carrosselautores\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.state.categories.map((category, index) => {\n      let image = \"url('http://atenas.hopto.org/uploads/\" + category.image + \"')\";\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"a_personalizationgrid_category\",\n        onClick: () => this.clickCategory(category.id),\n        style: {\n          backgroundImage: this.state.selected.find(obj => obj == category.id) ? image : 'none',\n          backgroundSize: 'contain',\n          color: this.state.selected.find(obj => obj == category.id) ? 'white' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"a_spanTextoCarrosselAuthor\",\n        style: {\n          backgroundColor: this.state.selected.find(obj => obj == category.id) ? 'rgba(0,0,0, 0.3)' : 'transparent',\n          color: this.state.selected.find(obj => obj == category.id) ? 'white' : 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, category.name));\n    }));\n  }\n\n}\n\nexport default PersonalizationGridAuthor;","map":{"version":3,"sources":["C:/xampp/htdocs/laravel-base/src/components/PersonalizationGridAuthor.js"],"names":["React","Component","useState","useEffect","PersonalizationGridAuthor","constructor","props","state","selected","clicked","categories","clickCategory","id","filter","obj","length","setState","prevState","concat","render","map","category","index","image","backgroundImage","find","backgroundSize","color","backgroundColor","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAO,gCAAP;;AAEA,MAAMC,yBAAN,SAAwCH,SAAxC,CAAkD;AAC9CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,UAAU,EAAEJ,KAAK,CAACI;AAHT,KAAb;AAMH;;AAEDC,EAAAA,aAAa,CAACC,EAAD,EAAK;AACd,QAAI,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,GAAG,IAAIA,GAAG,IAAIF,EAAzC,EAA6CG,MAA7C,IAAuD,CAA3D,EAA8D;AAC1D,WAAKC,QAAL,CAAc,CAACC,SAAD,EAAYX,KAAZ,MAAuB;AACjCE,QAAAA,QAAQ,EAAES,SAAS,CAACT,QAAV,CAAmBU,MAAnB,CAA0BN,EAA1B;AADuB,OAAvB,CAAd;AAGH,KAJD,MAIO;AACH,WAAKI,QAAL,CAAc,CAACC,SAAD,EAAYX,KAAZ,KAAsB;AAChC,eAAO;AAAEE,UAAAA,QAAQ,EAAES,SAAS,CAACT,QAAV,CAAmBK,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,IAAIF,EAAxC;AAAZ,SAAP;AACH,OAFD;AAGH;AAEJ;;AAEDO,EAAAA,MAAM,GAAG;AAEL,WAEI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMQ,KAAKZ,KAAL,CAAWG,UAAX,CAAsBU,GAAtB,CAA0B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,UAAIC,KAAK,GAAG,0CAA0CF,QAAQ,CAACE,KAAnD,GAA2D,IAAvE;AACA,aAAO;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAC,gCAA3B;AAA4D,QAAA,OAAO,EAAE,MAAM,KAAKX,aAAL,CAAmBU,QAAQ,CAACT,EAA5B,CAA3E;AACH,QAAA,KAAK,EAAE;AACHY,UAAAA,eAAe,EAAE,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBX,GAAG,IAAIA,GAAG,IAAIO,QAAQ,CAACT,EAAhD,IAAsDW,KAAtD,GAA8D,MAD5E;AAEHG,UAAAA,cAAc,EAAE,SAFb;AAGHC,UAAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBX,GAAG,IAAIA,GAAG,IAAIO,QAAQ,CAACT,EAAhD,IAAsD,OAAtD,GAAgE;AAHpE,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAA6C,QAAA,KAAK,EAAE;AACnDgB,UAAAA,eAAe,EAAE,KAAKrB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBX,GAAG,IAAIA,GAAG,IAAIO,QAAQ,CAACT,EAAhD,IAAsD,kBAAtD,GAA2E,aADzC;AAEnDe,UAAAA,KAAK,EAAG,KAAKpB,KAAL,CAAWC,QAAX,CAAoBiB,IAApB,CAAyBX,GAAG,IAAIA,GAAG,IAAIO,QAAQ,CAACT,EAAhD,IAAqD,OAArD,GAA+D;AAFpB,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGCS,QAAQ,CAACQ,IAHV,CALA,CAAP;AAUH,KAZD,CANR,CAFJ;AAyBH;;AAnD6C;;AAuDlD,eAAezB,yBAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport '../css/personalizationgrid.css';\r\n\r\nclass PersonalizationGridAuthor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: [],\r\n            clicked: [],\r\n            categories: props.categories,\r\n\r\n        }\r\n    }\r\n\r\n    clickCategory(id) {\r\n        if (this.state.selected.filter(obj => obj == id).length == 0) {\r\n            this.setState((prevState, props) => ({\r\n                selected: prevState.selected.concat(id)\r\n            }))\r\n        } else {\r\n            this.setState((prevState, props) => {\r\n                return { selected: prevState.selected.filter(obj => obj != id) };\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"row carrosselautores\">\r\n\r\n                {\r\n\r\n\r\n\r\n                    this.state.categories.map((category, index) => {\r\n                        let image = \"url('http://atenas.hopto.org/uploads/\" + category.image + \"')\";\r\n                        return <div key={index} className=\"a_personalizationgrid_category\" onClick={() => this.clickCategory(category.id)}\r\n                            style={{\r\n                                backgroundImage: this.state.selected.find(obj => obj == category.id) ? image : 'none',\r\n                                backgroundSize: 'contain',\r\n                                color: this.state.selected.find(obj => obj == category.id) ? 'white' : 'black'\r\n                            }}><span className=\"a_spanTextoCarrosselAuthor\" style={{\r\n                                backgroundColor: this.state.selected.find(obj => obj == category.id) ? 'rgba(0,0,0, 0.3)' : 'transparent',\r\n                                color:  this.state.selected.find(obj => obj == category.id) ?'white' : 'black',\r\n                            }}>{category.name}</span>\r\n                        </div>\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default PersonalizationGridAuthor;\r\n"]},"metadata":{},"sourceType":"module"}