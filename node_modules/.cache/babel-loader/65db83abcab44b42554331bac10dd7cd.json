{"ast":null,"code":"/*\n This file is auto-generated, do not edit\n*/\n'use strict';\n\nconst rqs = require(\"./request\");\n/**\n * Adds a purchase of a given item made by a given user.\n */\n\n\nclass AddPurchase extends rqs.Request {\n  /**\n   * Construct the request\n   * @param {string} userId - User who purchased the item\n   * @param {string} itemId - Purchased item\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the purchase as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) of purchased items. The default is 1. For example if `user-x` purchases two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price paid by the user for the item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *profit*\n   *         - Type: number\n   *         - Description: Your profit from the purchased item. The profit is natural in e-commerce domain (for example if `user-x` purchases `item-y` for $100 and the gross margin is 30 %, then the profit is $30), but is applicable also in other domains (for example at a news company it may be income from displayed advertisement on article page). If `amount` is greater than 1, sum of profit of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this purchase is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  constructor(userId, itemId, optional) {\n    super('POST', '/purchases/', 3000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.timestamp = optional.timestamp;\n    this.cascadeCreate = optional.cascadeCreate;\n    this.amount = optional.amount;\n    this.price = optional.price;\n    this.profit = optional.profit;\n    this.recommId = optional.recommId;\n    this.additionalData = optional.additionalData;\n  }\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n\n\n  bodyParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n    if (this.timestamp !== undefined) params.timestamp = this.timestamp;\n    if (this.cascadeCreate !== undefined) params.cascadeCreate = this.cascadeCreate;\n    if (this.amount !== undefined) params.amount = this.amount;\n    if (this.price !== undefined) params.price = this.price;\n    if (this.profit !== undefined) params.profit = this.profit;\n    if (this.recommId !== undefined) params.recommId = this.recommId;\n    if (this.additionalData !== undefined) params.additionalData = this.additionalData;\n    params.cascadeCreate = this.cascadeCreate !== undefined ? this.cascadeCreate : true;\n    return params;\n  }\n\n}\n\nexports.AddPurchase = AddPurchase;","map":{"version":3,"sources":["C:/xampp/htdocs/laravel-base/node_modules/recombee-js-api-client/src/requests/add-purchase.js"],"names":["rqs","require","AddPurchase","Request","constructor","userId","itemId","optional","timestamp","cascadeCreate","amount","price","profit","recommId","additionalData","bodyParameters","params","undefined","exports"],"mappings":"AAAA;;;AAIA;;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAnB;AAEA;;;;;AAGA,MAAMC,WAAN,SAA0BF,GAAG,CAACG,OAA9B,CAAsC;AAEpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BAC,EAAAA,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2B;AACpC,UAAM,MAAN,EAAc,aAAd,EAA6B,IAA7B,EAAmC,KAAnC;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,SAAKC,SAAL,GAAiBD,QAAQ,CAACC,SAA1B;AACA,SAAKC,aAAL,GAAqBF,QAAQ,CAACE,aAA9B;AACA,SAAKC,MAAL,GAAcH,QAAQ,CAACG,MAAvB;AACA,SAAKC,KAAL,GAAaJ,QAAQ,CAACI,KAAtB;AACA,SAAKC,MAAL,GAAcL,QAAQ,CAACK,MAAvB;AACA,SAAKC,QAAL,GAAgBN,QAAQ,CAACM,QAAzB;AACA,SAAKC,cAAL,GAAsBP,QAAQ,CAACO,cAA/B;AACD;AAED;;;;;;AAIAC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACX,MAAP,GAAgB,KAAKA,MAArB;AACAW,IAAAA,MAAM,CAACV,MAAP,GAAgB,KAAKA,MAArB;AAEA,QAAG,KAAKE,SAAL,KAAmBS,SAAtB,EACED,MAAM,CAACR,SAAP,GAAmB,KAAKA,SAAxB;AAEF,QAAG,KAAKC,aAAL,KAAuBQ,SAA1B,EACED,MAAM,CAACP,aAAP,GAAuB,KAAKA,aAA5B;AAEF,QAAG,KAAKC,MAAL,KAAgBO,SAAnB,EACED,MAAM,CAACN,MAAP,GAAgB,KAAKA,MAArB;AAEF,QAAG,KAAKC,KAAL,KAAeM,SAAlB,EACED,MAAM,CAACL,KAAP,GAAe,KAAKA,KAApB;AAEF,QAAG,KAAKC,MAAL,KAAgBK,SAAnB,EACED,MAAM,CAACJ,MAAP,GAAgB,KAAKA,MAArB;AAEF,QAAG,KAAKC,QAAL,KAAkBI,SAArB,EACED,MAAM,CAACH,QAAP,GAAkB,KAAKA,QAAvB;AAEF,QAAG,KAAKC,cAAL,KAAwBG,SAA3B,EACED,MAAM,CAACF,cAAP,GAAwB,KAAKA,cAA7B;AAEFE,IAAAA,MAAM,CAACP,aAAP,GAAwB,KAAKA,aAAL,KAAuBQ,SAAxB,GAAqC,KAAKR,aAA1C,GAA0D,IAAjF;AACA,WAAOO,MAAP;AACD;;AA5EmC;;AAgFtCE,OAAO,CAAChB,WAAR,GAAsBA,WAAtB","sourcesContent":["/*\n This file is auto-generated, do not edit\n*/\n\n'use strict';\nconst rqs = require(\"./request\");\n\n/**\n * Adds a purchase of a given item made by a given user.\n */\nclass AddPurchase extends rqs.Request {\n\n  /**\n   * Construct the request\n   * @param {string} userId - User who purchased the item\n   * @param {string} itemId - Purchased item\n   * @param {Object} optional - Optional parameters given as an object with structure name of the parameter: value\n   * - Allowed parameters:\n   *     - *timestamp*\n   *         - Type: string|number\n   *         - Description: UTC timestamp of the purchase as ISO8601-1 pattern or UTC epoch time. The default value is the current time.\n   *     - *cascadeCreate*\n   *         - Type: boolean\n   *         - Description: Sets whether the given user/item should be created if not present in the database.\n   *     - *amount*\n   *         - Type: number\n   *         - Description: Amount (number) of purchased items. The default is 1. For example if `user-x` purchases two `item-y` during a single order (session...), the `amount` should equal to 2.\n   *     - *price*\n   *         - Type: number\n   *         - Description: Price paid by the user for the item. If `amount` is greater than 1, sum of prices of all the items should be given.\n   *     - *profit*\n   *         - Type: number\n   *         - Description: Your profit from the purchased item. The profit is natural in e-commerce domain (for example if `user-x` purchases `item-y` for $100 and the gross margin is 30 %, then the profit is $30), but is applicable also in other domains (for example at a news company it may be income from displayed advertisement on article page). If `amount` is greater than 1, sum of profit of all the items should be given.\n   *     - *recommId*\n   *         - Type: string\n   *         - Description: If this purchase is based on a recommendation request, `recommId` is the id of the clicked recommendation.\n   *     - *additionalData*\n   *         - Type: \n   *         - Description: A dictionary of additional data for the interaction.\n   */\n  constructor(userId, itemId, optional) {\n    super('POST', '/purchases/', 3000, false);\n    this.userId = userId;\n    this.itemId = itemId;\n    optional = optional || {};\n    this.timestamp = optional.timestamp;\n    this.cascadeCreate = optional.cascadeCreate;\n    this.amount = optional.amount;\n    this.price = optional.price;\n    this.profit = optional.profit;\n    this.recommId = optional.recommId;\n    this.additionalData = optional.additionalData;\n  }\n\n  /**\n   * Get body parameters\n   * @return {Object} The values of body parameters (name of parameter: value of the parameter)\n   */\n  bodyParameters() {\n    let params = {};\n    params.userId = this.userId;\n    params.itemId = this.itemId;\n\n    if(this.timestamp !== undefined)\n      params.timestamp = this.timestamp;\n\n    if(this.cascadeCreate !== undefined)\n      params.cascadeCreate = this.cascadeCreate;\n\n    if(this.amount !== undefined)\n      params.amount = this.amount;\n\n    if(this.price !== undefined)\n      params.price = this.price;\n\n    if(this.profit !== undefined)\n      params.profit = this.profit;\n\n    if(this.recommId !== undefined)\n      params.recommId = this.recommId;\n\n    if(this.additionalData !== undefined)\n      params.additionalData = this.additionalData;\n\n    params.cascadeCreate = (this.cascadeCreate !== undefined) ? this.cascadeCreate : true;\n    return params;\n  }\n\n}\n\nexports.AddPurchase = AddPurchase\n"]},"metadata":{},"sourceType":"script"}